1.قم بتوفير جدول يوفر المنطقة لكل sales_rep بالإضافة إلى الحسابات المرتبطة الخاصة بهم. هذه المرة فقط للمنطقة Midwest. يجب أن يتضمن الجدول النهائي ثلاثة أعمدة: اسم المنطقة، واسم مستودع المبيعات، واسم الحساب. قم بفرز الحسابات أبجديًا (A-Z) وفقًا لاسم الحساب.
sol:
SELECT a.name, r.name, sr.name
FROM accounts a
JOIN sales_reps sr
ON a.sales_rep_id =sr.id
JOIN region r
ON sr.region_id=r.id 
WHERE r.name LIKE 'Midwest'
ORDER BY a.name 
##################
2.قم بتوفير جدول يوفر المنطقة لكل sales_rep بالإضافة إلى الحسابات المرتبطة الخاصة بهم. هذه المرة فقط للحسابات التي تحتوي على مستودع المبيعات الذي يبدأ الاسم الأول به بـ S وفي منطقة 'Midwest`. يجب أن يتضمن الجدول النهائي ثلاثة أعمدة: اسم المنطقة، واسم مستودع المبيعات، واسم الحساب. قم بفرز الحسابات أبجديًا (A-Z) وفقًا لاسم الحساب.
sol:
SELECT a.name, r.name, sr.name
FROM accounts a
JOIN sales_reps sr
ON a.sales_rep_id =sr.id
JOIN region r
ON sr.region_id=r.id 
WHERE r.name LIKE 'Midwest'AND sr.name LIKE 's%'
ORDER BY a.name 
#####################
3.قم بتوفير جدول يوفر المنطقة لكل sales_rep بالإضافة إلى الحسابات المرتبطة الخاصة بهم. هذه المرة فقط للحسابات التي تحتوي على مستودع المبيعات الذي يبدأ الاسم الأخير به بـ K وفي منطقة 'Midwest`. يجب أن يتضمن الجدول النهائي ثلاثة أعمدة: اسم المنطقة، واسم مستودع المبيعات، واسم الحساب. قم بفرز الحسابات أبجديًا (A-Z) وفقًا لاسم الحساب.
SELECT a.name, r.name, sr.name
FROM accounts a
JOIN sales_reps sr
ON a.sales_rep_id =sr.id
JOIN region r
ON sr.region_id=r.id 
WHERE r.name LIKE 'Midwest'AND sr.name LIKE '%k %'
ORDER BY a.name 
#####################
4.
قم بإدخال الاسم لكل منطقة لكل طلب، بالإضافة إلى اسم الحساب وسعر الوحدة التي دفعها (total_amt_usd/total) لكل طلب. ومع ذلك، يجب عليك فقط تقديم النتائج في حالة ما إذا كانت الكمية القياسية للطلب تتجاوز '100'. يجب أن يحتوي جدولك النهائي على 3 أعمدة: اسم المنطقة واسم الحساب وسعر الوحدة. من أجل تجنب القسمة عن طريق الخطأ على الصفر، فإن إضافة .01 إلى المقام هنا مفيد total_amt_usd/(total+0.01).
sol:
SELECT r.name region, a.name account, o.total_amt_usd/(o.total + 0.01) unit_price
FROM region r
JOIN sales_reps s
ON s.region_id = r.id
JOIN accounts a
ON a.sales_rep_id = s.id
JOIN orders o
ON o.account_id = a.id
WHERE o.standard_qty > 100;
######################
5.قم بإدخال الاسم لكل منطقة لكل طلب، بالإضافة إلى اسم الحساب وسعر الوحدة التي دفعها (total_amt_usd/total) لكل طلب. ومع ذلك، يجب عليك فقط تقديم النتائج في حالة ما إذا كانت الكمية القياسية للطلب تتجاوز '100' والكمية طلبات الملصقات تتجاوز 50. يجب أن يحتوي جدولك النهائي على 3 أعمدة: اسم المنطقة واسم الحساب وسعر الوحدة. قم بالفرز بحيث يكون أصغر سعر للوحدة أولاً. من أجل تجنب القسمة عن طريق الخطأ على الصفر، فإن إضافة .01 إلى المقام هنا مفيد total_amt_usd/(total+0.01).
sol:
SELECT r.name region, a.name account, o.total_amt_usd/(o.total + 0.01) unit_price
FROM region r
JOIN sales_reps s
ON s.region_id = r.id
JOIN accounts a
ON a.sales_rep_id = s.id
JOIN orders o
ON o.account_id = a.id
WHERE o.standard_qty > 100 AND o.poster_qty > 50
ORDER BY unit_price;
###############
6.قم بإدخال الاسم لكل منطقة لكل طلب، بالإضافة إلى اسم الحساب وسعر الوحدة التي دفعها (total_amt_usd/total) لكل طلب. ومع ذلك، يجب عليك فقط تقديم النتائج في حالة ما إذا كانت الكمية القياسية للطلب تتجاوز '100' والكمية طلبات الملصقات تتجاوز 50. يجب أن يحتوي جدولك النهائي على 3 أعمدة: اسم المنطقة واسم الحساب وسعر الوحدة. قم بالفرز بحيث يكو
ن أكبر سعر للوحدة أولاً. من أجل تجنب القسمة عن طريق الخطأ على الصفر، فإن إضافة .01 إلى المقام هنا مفيد total_amt_usd/(total+0.01).
sol:
SELECT r.name region, a.name account, o.total_amt_usd/(o.total + 0.01) unit_price
FROM region r
JOIN sales_reps s
ON s.region_id = r.id
JOIN accounts a
ON a.sales_rep_id = s.id
JOIN orders o
ON o.account_id = a.id
WHERE o.standard_qty > 100 AND o.poster_qty > 50
ORDER BY unit_price DESC;

################
7.ما القنوات المختلفة المستخدمة من account id 1001. يجب أن يحتوي جدولك النهائي على عمودين فقط: اسم الحساب والقنوات المختلفة. يمكنك تجربة SELECT DISTINCT لتضييق النتائج إلى القيم الفريدة فقط

sol:
SELECT DISTINCT a.name, w.channel
FROM accounts a
RIGHT JOIN web_events w
ON a.id = w.account_id
WHERE a.id = '1001';
################
8.ابحث عن جميع الطلبات التي حدثت في عام 2015. يجب أن يحتوي جدولك النهائي على 4 أعمدة: occurred_at وaccount name وorder total وorder total_amt_usd.
sol:
SELECT o.occurred_at, a.name, o.total, o.total_amt_usd
FROM accounts a
JOIN orders o
ON o.account_id = a.id
WHERE o.occurred_at BETWEEN '01-01-2015' AND '01-01-2016'
ORDER BY o.occurred_at DESC;



